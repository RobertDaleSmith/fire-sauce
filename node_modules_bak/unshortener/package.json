{
  "name": "unshortener",
  "description": "A simple library that can unshorten any short url",
  "version": "0.1.0",
  "homepage": "https://github.com/Swizec/node-unshortener",
  "repository": {
    "type": "git",
    "url": "git://github.com/Swizec/node-unshortener.git"
  },
  "author": {
    "name": "Swizec",
    "email": "swizec@swizec.com",
    "url": "http://swizec.com"
  },
  "main": "./index.js",
  "directories": {
    "lib": "."
  },
  "engines": {
    "node": "0.4 || 0.5 || 0.6 || 0.8"
  },
  "files": [
    ""
  ],
  "scripts": {
    "test": "expresso"
  },
  "dependencies": {
    "memcached": "0.0.10",
    "request": ">=2.9.202",
    "node_hash": ">=0.2.0",
    "charenc": ">=0.0.1",
    "crypt": ">=0.0.1"
  },
  "bundleDependencies": [
    "memcached",
    "request",
    "node_hash"
  ],
  "devDependencies": {},
  "readme": "\n# node-unshortener 0.1.0\n\nA simple library that can unshorten any short url.\n\n## Install\n\n     npm install unshortener\n\nor\n\n     git clone https://github.com/Swizec/node-unshortener.git\n     cd node-unshortener\n     npm link\n\n## Usage\n\n``` javascript\n     // expand an URL\n     var unshortener = require('unshortener');\n\n     // you can pass in a url object or string\n     unshortener.expand('http://t.co/rWP6BP3',\n                        function (err, url) {\n                             // url is a url object\n                             console.log(url);\n                        });\n```\n\nIf you have a handy bitly account you should also pass in an options\nobject to enable the unshortener to use the bitly API directly:\n\n``` javascript\n     // expand an URL\n     var unshortener = require('unshortener');\n\n     // you can pass in a url object or string\n     unshortener.expand('http://t.co/rWP6BP3',\n                        {bitly: {username: '<YOUR BITLY USERNAME>',\n                                 apikey: '<YOUR BITLY API KEY>'}},\n                        function (err, url) {\n                             // url is a url object\n                             console.log(url);\n                        });\n```\n\nWhen an error occurs the callback is passed the original url and an\nerror flag.\n\n## How it works\n\nnode-unshortener aims to be able to unshorten any link possible, so it\ntries to behave as a browser and simply follows all the\nredirects. However, to be nice, when at all possible, it tries to use\nthe url shortener's official API.\n\nThat said, please feel free to suggest any unshortening services I may\nhave missed.\n\nServices/domains directly supported so far:\n\n  - bit.ly\n  - j.mp\n  - is.gd\n  - goo.gl\n  - ericri.es\n  - jc.is\n  - nyti.ms\n  - linkd.in\n  - win.gs\n  - budurl.com\n  - snipurl.com\n  - snurl.com\n  - cl.lk\n  - snipr.com\n  - sn.im\n  - dai.ly\n  - imgry.net\n  - mln.im\n  - theatln.tc\n  - rww.to\n\n## License\n\nCopyright (C) Swizec Teller <swizec@swizec.com>\n\nLicensed under the [GPL version 3](http://www.gnu.org/licenses) or\nlater for non-commercial use.\n",
  "optionalDependencies": {},
  "_id": "unshortener@0.1.0",
  "_engineSupported": true,
  "_npmVersion": "1.1.18",
  "_nodeVersion": "v0.6.16",
  "_defaultsLoaded": true,
  "dist": {
    "shasum": "923929ac5b75648597a2ceb154da7213bcc10ffa",
    "tarball": "http://registry.npmjs.org/unshortener/-/unshortener-0.1.0.tgz"
  },
  "_from": "unshortener@*",
  "_npmUser": {
    "name": "swizec",
    "email": "swizec@swizec.com"
  },
  "maintainers": [
    {
      "name": "swizec",
      "email": "swizec@swizec.com"
    }
  ],
  "_shasum": "923929ac5b75648597a2ceb154da7213bcc10ffa",
  "_resolved": "https://registry.npmjs.org/unshortener/-/unshortener-0.1.0.tgz"
}
